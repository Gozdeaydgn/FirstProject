//----------------Child to Parent Query ------------
// STARTS WITH                   ==> 'A%'
// ENDS WITH                     ==> '%A'
// CONTAINS                      ==> '%A%'
//STARTS with A AND Ends with Y  ==> 'A%Y'   OR  'A__Y'



//Get all Contact Name and Account Name that Contact belong to
//Filter the contact to only show contact with Account

//SELECT Name, AccountId, Account.Name  
//FROM Contact
//WHERE AccountId != NULL


//Get all Case Subject and Account Name that Case belong to
//Filter the Case to only show Case with Account
//SELECT Subject, Account.Name
//FROM Case
//WHERE Account.Name != NULL


//Get all the Case Records, Subject and Account Name 
// that belong to Account with Name
//Starts with United
//SELECT Subject, Account.Name, Contact.Name, CreatedBy.Name 
//FROM Case
//WHERE Account.Name LIKE 'United%'

//Get all the Opportunity Name, Owner Name, Account Name 
//From Opportunity
//SELECT Name, Owner.Name, Account.Name
//FROM Opportunity

// Get All the Books Name, Price, Contact Name 
// Sort the result by Conact Name and show empty values on the botton 
// Filter the result to show only Books with Contact Name 'Snow'

//SELECT Name , Price__c , Contact__r.Name
//FROM Book__c
//WHERE Contact__r.Name = 'Snow'
//ORDER BY Price__c  DESC NULLS LAST

// Get All the Books Name, Price, Contact Name 
// Sort the result by Conact Name and show empty values on the bottom 
// Filter the result to show only Books with Contact Name Snow
// SELECT Name , Price__c , Contact__r.Name
// FROM Book__c
// WHERE Contact__r.Name  = 'Snow'

//se aggregate functions in a GROUP BY clause in SOQL queries to generate reports for analysis. Aggregate functions include AVG(), COUNT(), MIN(), MAX(), SUM(), and more.
//SELECT COUNT(Id), COUNT_DISTINCT(Name), 
//      SUM(Amount),MAX(Amount), MIN(Amount), AVG(Amount)
//FROM OPPORTUNITY

