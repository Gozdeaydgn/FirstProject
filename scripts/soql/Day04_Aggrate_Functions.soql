//AGGRATE FUNCTIONS:
//COUNT(Id), COUNT_DISTINCT(Name), SUM(Amount), MAX(Amount), MIN(Amount), AVG(Amount)





//SELECT COUNT(Id), COUNT_DISTINCT(Name), SUM(Amount), MAX(Amount), MIN(Amount), AVG(Amount)
//FROM Opportunity

//Do same for Account Object SELECT
    //SELECT COUNT(Id), COUNT_DISTINCT(Name), SUM(AnnualRevenue), MAX(AnnualRevenue), MIN(AnnualRevenue), AVG(AnnualRevenue)
    //FROM Account


// Count the Opportunities in Closed Won Stage
    //SELECT COUNT(Id)
    // Opportunity
    //WHERE StageName = 'Closed Won'


// Count the Opportunities in Closed Lost Stage
    // SELECT COUNT(Id)
    // FROM Opportunity
    // WHERE StageName = 'Closed Lost'


//Get Opportunity Count and Sum of Amount for each Stage
    //SELECT StageName, COUNT(Id), SUM(Amount)
    //FROM Opportunity
    //GROUP BY StageName 


// If you use aggregate function with any additional field in Select line
// It must be Grouped by that field or it will not work 
// Anytime you add any new field other than the field in group by , it will not work 
// as long as it does not show up in group by field list 


//Get the count of Leads of each LeadSource
    //SELECT LeadSource, COUNT(Id)
    //FROM Lead
    //GROUP BY LeadSource


//Get the count of Leads of each Stage
//Only return the row if the count more than 2
    //SELECT Stage, COUNT(Id) 
    //FROM Lead
    //GROUP BY Stage
    //HAVING COUNT(Id)>=2 

//Get the count of Leads of each Status
//Only return the row if the count less than 5
    //SELECT Status, COUNT(Id)
    //FROM Lead
    //GROUP BY Status
    //HAVING COUNT(ID) < 5

// Get all the count of account and
// the sum of AnnualRevenue
// for each Rating(Hot, Cold, Warm, NULL)
    // SELECT Rating, COUNT(Id), SUM(AnnualRevenue)
    // FROM Account
    // WHERE Rating != NULL
    // GROUP BY Rating
